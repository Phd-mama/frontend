name: CI/CD to VM with SonarCloud

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      # Run Jest tests and generate coverage
      - name: Run Jest Tests
        run: npm run test -- --coverage --config=jest.config.js
        continue-on-error: true

      # Run SonarCloud Scan
      - name: Run SonarCloud Scan
        run: |
          npm install -g sonar-scanner
          sonar-scanner \
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
            -Dsonar.organization=${{ secrets.SONAR_ORG }} \
            -Dsonar.sources=. \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info

      - name: Setup SSH Key and Add to Agent
        run: |
          mkdir -p /home/runner/.ssh 
          echo "${{ secrets.KAWUNG_SSH_KEY }}" > /home/runner/.ssh/id_rsa
          chmod 600 /home/runner/.ssh/id_rsa
          eval $(ssh-agent -s)
          ssh-add /home/runner/.ssh/id_rsa
        env:
          KAWUNG_SSH_KEY: ${{ secrets.KAWUNG_SSH_KEY }}

      - name: SSH to Kawung and deploy frontend
        run: |
          ssh -o StrictHostKeyChecking=no -p ${{ secrets.KAWUNG_PORT }} ${{ secrets.KAWUNG_USERNAME }}@${{ secrets.KAWUNG_HOST }} << 'EOF'
          ssh admin@${{ secrets.VM_HOST }} << 'VM_EOF'
          cd frontend
          git pull
          npm install
          npm run build
          pm2 restart frontend
          VM_EOF
          EOF
        env:
          KAWUNG_USERNAME: ${{ secrets.KAWUNG_USERNAME }}
          KAWUNG_HOST: ${{ secrets.KAWUNG_HOST }}
          KAWUNG_PORT: ${{ secrets.KAWUNG_PORT }}
          VM_HOST: ${{ secrets.VM_HOST }}
